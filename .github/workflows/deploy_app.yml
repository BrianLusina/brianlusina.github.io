name: Deploy

on:
  push:
    branches:
      - 'staging'
      - 'production'

jobs:
  deploy:
    name: Deploy

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use NodeJS ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: 16.x

    - name: Get yarn cache directory path
      id: cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: cache # use this to check for `cache-hit` (`steps.cache.outputs.cache-hit != 'true'`)
      with:
        path: |
          **/node_modules
          **/.eslintcache
          ${{ steps.cache-dir-path.outputs.dir }}          
        key: ${{ runner.os }}-cache-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'    
      run: yarn install

    - name: Build Staging
      if: github.ref == 'refs/heads/staging'
      run: yarn build
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        ENV: staging
        SENTRY_TRACES_SAMPLE_RATE: 1.0
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}

    - name: Deploy Staging
      if: github.ref == 'refs/heads/staging'
      run: yarn deploy:staging -- --token ${{ secrets.SURGE_TOKEN }}

    - name: Build Production
      if: github.ref == 'refs/heads/production'
      run: |
        yarn build
        mv build docs
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        ENV: production
        SENTRY_TRACES_SAMPLE_RATE: 0.5
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}

# Not being deployed to production, as this might expose sensitive data in the minified build
    # - name: Push Production
    #   if: github.ref == 'refs/heads/production'
    #   run: |
    #     git config --global user.name github-actions
    #     git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'      
    #     git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
    #     git add docs
    #     git commit -am "ci(github): publish site ${GITHUB_SHA}" || true
    #     git push --force origin refs/heads/production || true
