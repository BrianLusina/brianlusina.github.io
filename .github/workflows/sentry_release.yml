name: Sentry Release

on: 
  push:
    branches:
      - 'staging'
      - 'production'

jobs:
  release:
    name: Sentry Release

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use NodeJS ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: 16.x

    - name: Get yarn cache directory path
      id: cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: cache # use this to check for `cache-hit` (`steps.cache.outputs.cache-hit != 'true'`)
      with:
        path: |
          **/node_modules
          **/.eslintcache
          ${{ steps.cache-dir-path.outputs.dir }}          
        key: ${{ runner.os }}-cache-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-cache-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'    
      run: yarn install

    - name: Run Staging Build
      if: github.ref_name == 'staging'
      run: yarn build --if-present
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        ENV: staging
        NODE_ENV: staging
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}

    - name: Create Sentry Staging release
      if: github.ref_name == 'staging'
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      with:
        environment: staging
        sourcemaps: ./build/static/js

    - name: Run Production Build
      if: github.ref_name == 'production'
      run: yarn build --if-present
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        ENV: production
        NODE_ENV: production
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}

    - name: Create Sentry Production release
      if: github.ref_name == 'production'
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      with:
        environment: production
        sourcemaps: ./build/static/js
