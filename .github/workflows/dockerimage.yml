# Reference:https://github.com/marketplace/actions/build-and-push-docker-images
name: Docker Build

on:
  workflow_run:
    workflows:
      - "Build"
    types:
      - completed
    branches:
      - "main"
      - "develop"
  push:
    branches: [ main, develop ]

jobs:
  push_to_docker_registries:
    name: Pushes Docker image to Dockerhub & Github Container Registry
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        # list of Docker images to use as base name for tags
        images: |
          ${{ secrets.DOCKER_USERNAME }}/fenestra
          ghcr.io/github.repository_owner/brianlusina.github.io
        # generate Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Set Up Qemu
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # this does not work as expected as it is not possible to pass the
    # artifact from a different workflow
    # - name: Download build artifact
    #   uses: actions/download-artifact@v1
    #   with:
    #     name: build

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GH_PACKAGE_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
